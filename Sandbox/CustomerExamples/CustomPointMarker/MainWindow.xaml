<Window x:Class="CustomPointMarkerExample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="600" Width="900"
        xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:customPointMarkerExample="clr-namespace:CustomPointMarkerExample">
    
    <Window.Resources>
        <ControlTemplate x:Key="SpriteTemplate">         
            <!-- You can put literally anything in a SpritePointMarker template. Just note that the UIElement is rendered to bitmap ONCE. You cannot put triggers in here -->
            <Viewbox Width="24" Height="24" Stretch="Fill">
                <Grid>
                    <Polygon Points="100,0 75,75 100,100 125,75"
                     Stroke="Black" StrokeThickness="2" Fill="Yellow"/>
                    <Polygon Points="100,100 125,125 100,200 75,125"
                     Stroke="Yellow" StrokeThickness="2" Fill="Black"/>
                    <Polygon Points="100,100 125,75 200,100 125,125"
                     Stroke="Red" StrokeThickness="2" Fill="Blue"/>
                    <Polygon Points="100,100 75,125 0,100 75,75"
                     Stroke="Blue" StrokeThickness="2" Fill="Red"/>
                </Grid>
            </Viewbox>
        </ControlTemplate>

        <SolidColorBrush x:Key="LegendTextBrush"  Color="#5F5F5F"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- This is the default LegendItemTemplate from our styles, but we have modified it to allow a notification on checkbox check-->
        <DataTemplate x:Key="LegendItemTemplate" DataType="s:SeriesInfo">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />                    
                </Grid.ColumnDefinitions>

                <CheckBox Margin="5,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    customPointMarkerExample:CheckedChangeZoomExtentsBehaviour.EnableZoomExtentsOnChecked="True"
                    Content="Is Visible?"
                    Foreground="{StaticResource LegendTextBrush}"
                    IsChecked="{Binding RenderableSeries.IsVisible, Mode=TwoWay}"
                    Visibility="{Binding LegendData.ShowVisibilityCheckboxes, RelativeSource={RelativeSource AncestorType=s:SciChartLegend}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <s:PointMarker Grid.Column="1" Margin="5,0,0,0" Width="40" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center" 
                            DataContext="{Binding RenderableSeries}"
                            DeferredContent="{Binding LegendMarkerTemplate}"
                            Visibility="{Binding ShowSeriesMarkers, RelativeSource={RelativeSource AncestorType=s:SciChartLegend}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <TextBlock Margin="5,0,5,0"
                    Grid.Column="2"
                    HorizontalAlignment="Left"
                    Foreground="{StaticResource LegendTextBrush}"
                    Text="{Binding SeriesName}" />

                <CheckBox Margin="5,0,0,0"
                    Grid.Column="3"
                    Content="Draw Line?"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource LegendTextBrush}"
                    DataContext="{Binding RenderableSeries}"
                    IsChecked="{Binding Path=(customPointMarkerExample:SeriesExtensions.DrawLine), Mode=TwoWay}"/>

                <CheckBox Margin="15,0,0,0"
                    Grid.Column="4"
                    Content="Draw Marker?"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Foreground="{StaticResource LegendTextBrush}"
                    DataContext="{Binding RenderableSeries}"
                    IsChecked="{Binding Path=(customPointMarkerExample:SeriesExtensions.DrawMarker), Mode=TwoWay}"/>

                <StackPanel Grid.Column="5" Orientation="Horizontal" Margin="15,3">
                    <TextBlock Text="Stroke Thickness: " Foreground="{StaticResource LegendTextBrush}"/>
                    <Slider  Minimum="1" Maximum="5" MinWidth="50" DataContext="{Binding RenderableSeries}" Value="{Binding Path=StrokeThickness, Mode=TwoWay}"/>
                </StackPanel>
                
                <!-- From Extended Wpf Toolkit NuGet package -->
                <StackPanel Grid.Column="6" Orientation="Horizontal" Margin="15,3">
                    <TextBlock Text="Stroke: " Foreground="{StaticResource LegendTextBrush}"/>
                    <xctk:ColorPicker DataContext="{Binding RenderableSeries}"  ColorMode="ColorCanvas"
                                  SelectedColor="{Binding Stroke, Mode=TwoWay}" Width="50"/>
                </StackPanel>                
                                
            </Grid>
        </DataTemplate>
        
        <!-- This implicit style hides markers and lines based on attached properties in SeriesExtensions.cs -->
        <Style TargetType="{x:Type s:FastLineRenderableSeries}">            
            <Style.Triggers>

                <!-- Trigger to hide the line. Animation is required due to DependencyProperty Precedence. See http://msdn.microsoft.com/en-us/library/ms743230(v=vs.110).aspx -->
                <!-- Animation duration can be set to 0:0:0 if necessary -->
                <Trigger Property="customPointMarkerExample:SeriesExtensions.DrawLine" Value="False">
                    <Trigger.EnterActions>
                        <BeginStoryboard Name="HideLineStoryboard">
                            <Storyboard TargetProperty="Stroke">
                                <ColorAnimation To="Transparent" FillBehavior="HoldEnd" Duration="0:0:0.5" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="HideLineStoryboard"></StopStoryboard>
                    </Trigger.ExitActions>
                </Trigger>

                <!-- Trigger to hide the marker. Animation is required due to DependencyProperty Precedence. See http://msdn.microsoft.com/en-us/library/ms743230(v=vs.110).aspx -->
                <!-- Animation duration can be set to 0:0:0 if necessary -->
                <Trigger Property="customPointMarkerExample:SeriesExtensions.DrawMarker" Value="False">
                    <Trigger.EnterActions>
                        <BeginStoryboard Name="HideMarkerStoryboard" >
                            <Storyboard TargetProperty="PointMarker">
                                <ObjectAnimationUsingKeyFrames  FillBehavior="HoldEnd" Duration="0:0:0">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="HideMarkerStoryboard"></StopStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
                        
        <s:SciChartSurface s:ThemeManager.Theme="Chrome">

            <s:SciChartSurface.RenderSurface>
                <!-- <s:HighSpeedRenderSurface/> Our default high speed renderer uses integer coordinates -->
                <s:HighQualityRenderSurface/> <!-- Our HQ renderer uses floating-point coordinates -->
            </s:SciChartSurface.RenderSurface>
            
            <s:SciChartSurface.RenderableSeries>                
                <!-- Standard TrianglePointMarker -->
                <s:FastLineRenderableSeries x:Name="series0" Stroke="Orange" StrokeThickness="2">
                    <s:FastLineRenderableSeries.PointMarker>
                        <s:TrianglePointMarker Fill="White" Stroke="Orange" Width="9" Height="9" StrokeThickness="{Binding StrokeThickness}"/>                        
                    </s:FastLineRenderableSeries.PointMarker>
                </s:FastLineRenderableSeries>

                <!-- using SpritePointMarker to create a custom shape -->
                <s:FastLineRenderableSeries x:Name="series1" Stroke="OrangeRed" StrokeThickness="2">
                    <s:FastLineRenderableSeries.PointMarker>
                        <s:SpritePointMarker PointMarkerTemplate="{StaticResource SpriteTemplate}"/>
                    </s:FastLineRenderableSeries.PointMarker>
                </s:FastLineRenderableSeries>

                <!-- using BasePointMarker to create a custom shape -->
                <s:FastLineRenderableSeries x:Name="series2" Stroke="Purple" StrokeThickness="2">
                    <s:FastLineRenderableSeries.PointMarker>
                        <customPointMarkerExample:DiamondPointMarker Fill="White" Stroke="Purple" Width="9" Height="9" StrokeThickness="{Binding StrokeThickness}">
                            
                            <!-- For custom point markers, you need to create this to show the marker in the legend -->
                            <!-- Note the SpritePointMarker works by default. You could use sprites instead of creating BasePointMarker derived classes --> 
                            <customPointMarkerExample:DiamondPointMarker.PointMarkerTemplate>
                                <ControlTemplate>
                                    <Grid Margin="8,0,0,0">
                                        <Rectangle Width="16" Height="16" Fill="White" Stroke="Purple">
                                            <Rectangle.LayoutTransform>
                                                <RotateTransform CenterX="8" CenterY="8" Angle="45"/>
                                            </Rectangle.LayoutTransform>
                                        </Rectangle>
                                    </Grid>
                                </ControlTemplate>
                            </customPointMarkerExample:DiamondPointMarker.PointMarkerTemplate>
                            
                        </customPointMarkerExample:DiamondPointMarker>
                    </s:FastLineRenderableSeries.PointMarker>
                </s:FastLineRenderableSeries>

            </s:SciChartSurface.RenderableSeries>
            <s:SciChartSurface.XAxis>
                <s:NumericAxis GrowBy="0.1, 0.1"/>
            </s:SciChartSurface.XAxis>
            <s:SciChartSurface.YAxis>
                <s:NumericAxis GrowBy="0.1, 0.1"/>
            </s:SciChartSurface.YAxis>
            
            <s:SciChartSurface.ChartModifier>
                <s:ModifierGroup>
                    <s:RubberBandXyZoomModifier/>
                    <s:ZoomPanModifier ExecuteOn="MouseMiddleButton"/>
                    <s:ZoomExtentsModifier ExecuteOn="MouseDoubleClick"/>
                    <s:LegendModifier ShowLegend="True" LegendItemTemplate="{StaticResource LegendItemTemplate}"/>
                </s:ModifierGroup>
            </s:SciChartSurface.ChartModifier>
        </s:SciChartSurface>
    </Grid>
</Window>
