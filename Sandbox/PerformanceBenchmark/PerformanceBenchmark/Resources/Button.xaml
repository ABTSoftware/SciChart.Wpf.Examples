<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource Benchmark.Brushes.Control.Border}"/>
        <Setter Property="Background" Value="{StaticResource Benchmark.Brushes.Control.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource Benchmark.Brushes.Control.Foreground}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        <Border x:Name="DisabledVisualElement"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Background="{StaticResource Benchmark.Brushes.Control.Disabled}"
                                IsHitTestVisible="False"
                                Opacity="0"/>

                        <ContentPresenter x:Name="ContentWrapper"
                                          Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background"  Value="{StaticResource Benchmark.Brushes.Control.Background.MouseOver}"/>
                            <Setter TargetName="Background" Property="BorderBrush" Value="{StaticResource Benchmark.Brushes.Control.Border.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="Background"  Value="{StaticResource Benchmark.Brushes.Control.Background.Pressed}"/>
                            <Setter TargetName="Background" Property="BorderBrush" Value="{StaticResource Benchmark.Brushes.Control.Border.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7"/>
                            <Setter TargetName="ContentWrapper" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="MinWidth" Value="24"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource Benchmark.Brushes.Control.Transparent}"/>
        <Setter Property="Foreground" Value="{StaticResource Benchmark.Brushes.Control.Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BackgroundElement"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">

                        <ContentControl x:Name="ContentWrapper"
                                        KeyboardNavigation.IsTabStop="False"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"       
                                        Foreground="{TemplateBinding Foreground}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                        Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Background" Value="{StaticResource Benchmark.Brushes.Control.Background.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundElement" Property="Background" Value="{StaticResource Benchmark.Brushes.Control.Background.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentWrapper" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>