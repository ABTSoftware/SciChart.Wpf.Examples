<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:SciChart.Examples.ExternalDependencies.Common">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Effects.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource DefaultButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultButtonForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="RootElement"
                            CornerRadius="5"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}">

                        <ContentPresenter x:Name="ContentHost"
                                          Margin="{TemplateBinding Padding}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          VerticalAlignment="Center"              
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DefaultButtonCheckedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DefaultButtonCheckedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DefaultButtonMouseOverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultUncheckableToggleButtonStyle" TargetType="ToggleButton"
           BasedOn="{StaticResource DefaultToggleButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="IsHitTestVisible" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultFlyoutMenuToggleButtonStyle" TargetType="common:FlyoutMenuToggleButton">
        <Setter Property="Background" Value="{DynamicResource DefaultButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultButtonForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="PopupOffset" Value="0"/>
        <Setter Property="PopupAlignment" Value="Right"/>
        <Setter Property="AllowMouseUncheck" Value="True"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="common:FlyoutMenuToggleButton">
                    <Grid x:Name="PART_Root" Background="Transparent">
                        <Border x:Name="PART_Border"
                                CornerRadius="5"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}">

                            <ContentPresenter x:Name="ContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              VerticalAlignment="Center"              
                                              HorizontalAlignment="Center"/>
                        </Border>

                        <Popup x:Name="PART_Popup" Focusable="False" AllowsTransparency="True">
                            <StackPanel x:Name="PART_Panel">
                                <Border MinWidth="100"                                   
                                        MinHeight="60"
                                        CornerRadius="5"
                                        Margin="10,0,10,10"
                                        UseLayoutRounding="True"
                                        HorizontalAlignment="Stretch"
                                        Effect="{StaticResource DefaultShadowEffect}"
                                        Background="{DynamicResource ToolbarPopupBackgroundBrush}"
                                        BorderBrush="{DynamicResource ToolbarPopupBorderBrush}"
                                        BorderThickness="1">
         
                                    <ContentPresenter Content="{TemplateBinding PopupContent}"/>
                                </Border>
                            </StackPanel>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DefaultButtonCheckedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DefaultButtonCheckedForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DefaultButtonMouseOverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="common:FlyoutMenuToggleButton" BasedOn="{StaticResource DefaultFlyoutMenuToggleButtonStyle}"/>

</ResourceDictionary>