<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:SciChart.Examples.ExternalDependencies.Common">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Effects.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- Style for the days of a month -->
    <Style x:Key="CalendarDayButtonStyle" TargetType="CalendarDayButton">
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal"/>
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed"/>
                                <VisualState Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0"/>

                                        <DoubleAnimation Storyboard.TargetName="NormalText"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.4" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected"/>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>

                                        <ColorAnimation Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="{DynamicResource ToolbarPopupCalendarItemSelectedForegroundColor}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active"/>
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="{DynamicResource ToolbarPopupCalendarItemInactiveForegroundColor}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="RegularDay"/>
                                <VisualState Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="TodayBackground"
                                CornerRadius="3"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource ToolbarPopupCalendarItemMouseOverBackgroundBrush}"
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"     
                                Opacity="0"/>

                        <Border x:Name="HighlightBackground"
                                CornerRadius="3"
                                Background="{DynamicResource ToolbarPopupCalendarItemMouseOverBackgroundBrush}"                                                   
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"
                                Opacity="0"/>

                        <Border x:Name="SelectedBackground"  
                                CornerRadius="3"
                                Background="{DynamicResource ToolbarPopupCalendarItemSelectedBackgroundBrush}"                                                       
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"
                                Opacity="0"/>

                        <ContentPresenter x:Name="NormalText"                                      
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="5,1">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="{DynamicResource ToolbarPopupCalendarItemForegroundColor}"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for the months of a year and years of a decade -->
    <Style x:Key="CalendarButtonStyle" TargetType="CalendarButton">
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="42"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Background"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected"/>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>

                                        <ColorAnimation Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="{DynamicResource ToolbarPopupCalendarItemSelectedForegroundColor}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active"/>
                                <VisualState Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
                                                        To="{DynamicResource ToolbarPopupCalendarItemInactiveForegroundColor}" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background"
                                CornerRadius="5"
                                Background="{DynamicResource ToolbarPopupCalendarItemMouseOverBackgroundBrush}"                                                   
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"
                                Opacity="0"/>

                        <Border x:Name="SelectedBackground"  
                                CornerRadius="5"
                                Background="{DynamicResource ToolbarPopupCalendarItemSelectedBackgroundBrush}"                                                         
                                SnapsToDevicePixels="True"
                                UseLayoutRounding="True"
                                Opacity="0"/>

                        <ContentPresenter x:Name="NormalText"
                                          TextElement.FontSize="10"
                                          TextElement.FontWeight="SemiBold"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <TextElement.Foreground>
                                <SolidColorBrush Color="{DynamicResource ToolbarPopupCalendarItemForegroundColor}"/>
                            </TextElement.Foreground>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button to go to the previous month or year -->
    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
        <Grid Cursor="Hand" Background="Transparent">
            <common:ToolbarIcon x:Name="Icon"
                                Kind="ChevronLeft"
                                Foreground="{DynamicResource ToolbarPopupCalendarButtonForegroundBrush}"
                                Height="10" Width="10"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource ToolbarPopupCalendarButtonMouseOverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="Opacity" Value="0.4"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Button to go to the next month or year -->
    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
        <Grid Cursor="Hand" Background="Transparent">
            <common:ToolbarIcon x:Name="Icon"
                                Kind="ChevronRight"
                                Foreground="{DynamicResource ToolbarPopupCalendarButtonForegroundBrush}"
                                Height="10" Width="10"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Icon" Property="Foreground" Value="{DynamicResource ToolbarPopupCalendarButtonMouseOverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Icon" Property="Opacity" Value="0.4"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Button to go up a level to the year or decade -->
    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
        <Grid Cursor="Hand" Background="Transparent">
            <ContentPresenter x:Name="buttonContent"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              TextElement.Foreground="{DynamicResource ToolbarPopupCalendarButtonForegroundBrush}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="buttonContent" Property="TextElement.Foreground" Value="{DynamicResource ToolbarPopupCalendarButtonMouseOverForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="buttonContent" Property="Opacity" Value="0.4"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
        <Setter Property="Padding" Value="5,0,5,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Text="{Binding Mode=OneWay}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" 
                                       FontFamily="Segoe"
                                       FontWeight="SemiBold"
                                       FontSize="11"
                                       Margin="0,0,0,5">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{DynamicResource ToolbarPopupCalendarItemForegroundColor}"/>
                                </TextBlock.Foreground>
                            </TextBlock>
                        </DataTemplate>
                    </ControlTemplate.Resources>

                    <Grid x:Name="PART_Root">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">

                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Button x:Name="PART_PreviousButton"
                                        Grid.Row="0"
                                        Grid.Column="0"                   
                                        Template="{StaticResource PreviousButtonTemplate}"
                                        Focusable="False"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Margin="0"
                                        MinHeight="20"
                                        MinWidth="20"
                                        Height="20"
                                        Width="20"/>

                                <Button x:Name="PART_HeaderButton"
                                        Grid.Row="0"
                                        Grid.Column="1"      
                                        Template="{StaticResource HeaderButtonTemplate}" 
                                        FontFamily="Segoe"
                                        FontWeight="SemiBold"
                                        FontSize="12"
                                        Focusable="False"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Margin="5,0"
                                        MinHeight="20"                             
                                        Height="20"/>

                                <Button x:Name="PART_NextButton"      
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        Template="{StaticResource NextButtonTemplate}"
                                        Focusable="False"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Margin="0"
                                        MinHeight="20"
                                        MinWidth="20"
                                        Height="20"
                                        Width="20"/>

                                <Grid x:Name="PART_MonthView"
                                      Grid.Row="1"
                                      Grid.ColumnSpan="3"                          
                                      Visibility="Visible"
                                      HorizontalAlignment="Center"
                                      Margin="5">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                </Grid>

                                <Grid x:Name="PART_YearView"
                                      Grid.Row="1"
                                      Grid.ColumnSpan="3"
                                      Visibility="Hidden"
                                      HorizontalAlignment="Center"
                                      Margin="5">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolbarPopupDatePickerCalendarStyle" TargetType="{x:Type Calendar}">
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}"/>
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}"/>
        <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}"/>
        <Setter Property="Background" Value="{DynamicResource ToolbarPopupCalendarBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ToolbarPopupCalendarBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <StackPanel x:Name="PART_Root" Margin="0,0,10,10">
                        <CalendarItem x:Name="PART_CalendarItem"    
                                      Effect="{StaticResource DefaultShadowEffect}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}"                    
                                      Style="{TemplateBinding CalendarItemStyle}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>