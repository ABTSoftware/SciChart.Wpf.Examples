<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:SciChart.Examples.Demo.Common.Converters"
                    xmlns:helpers="clr-namespace:SciChart.Examples.Demo.Helpers"
                    xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
                    xmlns:ext="http://schemas.abtsoftware.co.uk/scichart/exampleExternals">

    <!--xmlns:t="clr-namespace:SciChart.Examples.Demo.Controls.TileControl"-->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="../../Themes/Common.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <s:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:IsGroupConverter x:Key="IsGroupConverter" />
    <converters:ExampleConverter x:Key="ExampleConverter" />

    <DataTemplate x:Key="GroupDataTemplate">
        <Border Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ItemsControl}}" 
                Background="{StaticResource HeaderBackgroundBrush}"
                Height="60"
                Margin="0,0,0,8">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Path Margin="10,0,0,0" VerticalAlignment="Center" Stroke="{StaticResource HeadingTextBrush}" Opacity="0.5" StrokeThickness="1" 
                      StrokeMiterLimit="10" StrokeLineJoin="Miter" StrokeStartLineCap="Flat" StrokeEndLineCap="Flat" 
                      Data="M 0.8398 2.2956059e-4 0 0.54322956 9.7226 15.56863 l -9.7187 14.6269 0.832 0.5528 10.0821 -15.1739 z"></Path>

                <TextBlock Margin="10,10,0,10"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Grid.Column="1"
                    Style="{StaticResource GroupHeaderTextStyle}"
                    Text="{Binding TileDataContext.GroupingName, StringFormat='{}{0}: '}"
                    TextWrapping="Wrap" />
            </Grid>
        </Border>
    </DataTemplate>

    <!--<DataTemplate x:Key="ExampleDataTemplate">
        <t:Tile Width="260"
                Height="60"
                Margin="0,0,8,8"
                AutomationProperties.AutomationId="{Binding TileDataContext.Title}"
                Background="{StaticResource GroupsItemBrush}"
                Command="{Binding TileDataContext.SelectCommand}"
                CommandParameter="{Binding TileDataContext}"
                TileState="{Binding TileState, Mode=TwoWay}"
                TransitionTime="{Binding TransitionTime, Mode=TwoWay}">
            <t:Tile.Content>
                <ContentControl x:Name="MainContent">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Viewbox Grid.Column="0" Width="50" Height="50" Margin="5">
                            <ContentPresenter Content="{Binding}" ext:ContentPresenterHelper.ContentTemplate="{Binding TileDataContext.IconPath}"/>
                        </Viewbox>

                        <TextBlock Grid.Column="1"
                                   Margin="5"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Style="{StaticResource GroupHeaderTextStyle}"
                                   Text="{Binding TileDataContext.Title}"
                                   TextWrapping="Wrap" />
                    </Grid>
                </ContentControl>
            </t:Tile.Content>
            <t:Tile.DetailedContent>
                <ContentControl x:Name="DetailedContent">
                    <TextBlock Margin="5"
                               HorizontalAlignment="Left"
                               Style="{StaticResource GroupHeaderTextStyle}"
                               Text="{Binding TileDataContext.Description}"
                               TextWrapping="Wrap" />
                </ContentControl>
            </t:Tile.DetailedContent>
            <t:Tile.TooltipContent>
                <Rectangle Fill="{StaticResource SciChartGreenBrush}" />
            </t:Tile.TooltipContent>
        </t:Tile>
    </DataTemplate>-->

    <DataTemplate x:Key="ExampleDataTemplate">
        <Button Width="260"
                Height="60"
                Margin="0,0,8,8"
                BorderThickness="0"
                HorizontalContentAlignment="Left"
                VerticalContentAlignment="Stretch"
                AutomationProperties.AutomationId="{Binding TileDataContext.Title}"
                Background="{StaticResource GroupsItemBrush}"
                Command="{Binding TileDataContext.SelectCommand}"
                CommandParameter="{Binding TileDataContext}">
            
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}" helpers:Clip.ToBounds="True">
                        <Border x:Name="border"
                                Background="{StaticResource SciChartGreenBrush}"
                                Opacity="0"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     From="0" To="1" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     From="1" To="0" Duration="0:0:0.3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Viewbox Grid.Column="0" Width="50" Height="50" Margin="5">
                    <ContentPresenter Content="{Binding}" ext:ContentPresenterHelper.ContentTemplate="{Binding TileDataContext.IconPath}"/>
                </Viewbox>

                <TextBlock Grid.Column="1"
                           Margin="5"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Style="{StaticResource GroupHeaderTextStyle}"
                           Text="{Binding TileDataContext.Title}"
                           TextWrapping="Wrap"/>
            </Grid>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="EverythingDataTemplate">
        <helpers:EverythingTemplateSelector Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                            ExampleDataTemplate="{StaticResource ExampleDataTemplate}"
                                            GroupDataTemplate="{StaticResource GroupDataTemplate}" />
    </DataTemplate>

</ResourceDictionary>