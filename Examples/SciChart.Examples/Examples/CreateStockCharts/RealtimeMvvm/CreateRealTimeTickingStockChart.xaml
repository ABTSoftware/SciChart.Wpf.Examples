<UserControl x:Class="SciChart.Examples.Examples.CreateStockCharts.RealtimeMvvm.CreateRealTimeTickingStockChart"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ext="http://schemas.abtsoftware.co.uk/scichart/exampleExternals"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
             d:DesignHeight="400"
             d:DesignWidth="600"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ext:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter" />

        <Style x:Key="LegendStyle" TargetType="s:LegendModifier">
            <Setter Property="Margin" Value="5" />
            <Setter Property="LegendPlacement" Value="Inside" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="ShowSeriesMarkers" Value="True" />
            <Setter Property="ShowVisibilityCheckboxes" Value="True" />
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ext:SciChartInteractionToolbar Grid.Column="0">

            <ToggleButton x:Name="IsPanEnabled"
                          IsChecked="True"
                          Style="{StaticResource DefaultToggleButtonStyle}"
                          ToolTipService.ToolTip="Toggle Zoom-Pan"
                          s:ToggleButtonExtensions.GroupName="Modifiers">
                <ext:ToolbarIcon Kind="ArrowAll" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </ToggleButton>

            <ToggleButton x:Name="IsZoomEnabled"
                          Style="{StaticResource DefaultToggleButtonStyle}"
                          ToolTipService.ToolTip="Toggle Rubber-Band Zoom"
                          s:ToggleButtonExtensions.GroupName="Modifiers">
                <ext:ToolbarIcon Kind="MagnifyPlusOutline" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </ToggleButton>

            <ToggleButton Command="{Binding StartUpdatesCommand}"
                          Style="{StaticResource DefaultUncheckableToggleButtonStyle}"
                          s:ToggleButtonExtensions.GroupName="StartStop">
                <ext:ToolbarIcon Kind="Play" Height="14" Width="14" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </ToggleButton>

            <ToggleButton Command="{Binding StopUpdatesCommand}"
                          IsChecked="True"
                          Style="{StaticResource DefaultUncheckableToggleButtonStyle}"
                          s:ToggleButtonExtensions.GroupName="StartStop">
                <ext:ToolbarIcon Kind="Stop" Height="12" Width="12" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </ToggleButton>

            <ext:FlyoutMenuButton>
                <ext:ToolbarIcon Kind="TuneVariant" Height="16" Width="16" Style="{StaticResource ToolbarButtonIconStyle}"/>
                <ext:FlyoutMenuButton.PopupContent>
                    <StackPanel Margin="5,5,5,10" Width="150" Orientation="Vertical">
                        <TextBlock Text="Stroke Thickness" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <ComboBox ItemsSource="{Binding StrokeThicknesses}"
                                  SelectedItem="{Binding SelectedStrokeThickness, Mode=TwoWay}"/>

                        <TextBlock Text="Series Styles" Margin="0,10,0,5" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <ComboBox ItemsSource="{Binding SeriesStyles}"
                                  SelectedItem="{Binding SelectedSeriesStyle, Mode=TwoWay}"/>

                        <CheckBox x:Name="UseAntiAliasing" Margin="0,10,0,0" Content="Use Antialiasing" IsChecked="False"/>
                    </StackPanel>
                </ext:FlyoutMenuButton.PopupContent>
            </ext:FlyoutMenuButton>
        </ext:SciChartInteractionToolbar>

        <!--  Define the StockChart control, binding to PriceData  -->
        <s:SciStockChart x:Name="PriceChart"
                         Grid.Row="0"
                         Grid.Column="1"
                         IsPanEnabled="{Binding Source={x:Reference Name=IsPanEnabled}, Path=IsChecked, Mode=TwoWay}"
                         IsRubberBandZoomEnabled="{Binding Source={x:Reference Name=IsZoomEnabled}, Path=IsChecked, Mode=TwoWay}"
                         LegendStyle="{StaticResource LegendStyle}"
                         RenderableSeries="{s:SeriesBinding SeriesViewModels}">

            <s:SciStockChart.Resources>
                <Style x:Key="BaseRenderableSeriesStyle" TargetType="s:BaseRenderableSeries">
                    <Setter Property="AntiAliasing" Value="{Binding Source={x:Reference Name=UseAntiAliasing}, Path=IsChecked, Mode=OneWay}" />
                    <Setter Property="StrokeThickness" Value="{Binding Source={x:Reference Name=PriceChart}, Path=DataContext.SelectedStrokeThickness}" />
                </Style>
                <Style x:Key="LineStyle" TargetType="s:FastLineRenderableSeries">
                    <Setter Property="Stroke" Value="#FFFFA500" />
                    <Setter Property="AntiAliasing" Value="{Binding Source={x:Reference Name=UseAntiAliasing}, Path=IsChecked, Mode=OneWay}" />
                    <Setter Property="StrokeThickness" Value="{Binding Source={x:Reference Name=PriceChart}, Path=DataContext.SelectedStrokeThickness}" />
                </Style>
            </s:SciStockChart.Resources>

            <!--  Override any properties of the built-in CategoryDateTimeAxis  -->
            <s:SciStockChart.XAxisStyle>
                <Style TargetType="s:CategoryDateTimeAxis">
                    <Setter Property="GrowBy" Value="0, 0.1" />
                    <Setter Property="DrawMinorGridLines" Value="False" />
                    <Setter Property="DrawMajorBands" Value="True" />
                    <Setter Property="BarTimeFrame" Value="{Binding BarTimeFrame, Mode=OneWay}" />
                    <Setter Property="VisibleRange" Value="{Binding XVisibleRange, Mode=TwoWay}" />
                </Style>
            </s:SciStockChart.XAxisStyle>

            <!--  Override any properties of the built-in NumericAxis  -->
            <s:SciStockChart.YAxisStyle>
                <Style TargetType="s:NumericAxis">
                    <Setter Property="AutoRange" Value="Always" />
                </Style>
            </s:SciStockChart.YAxisStyle>
        </s:SciStockChart>

        <!--  This grid is used to space Overview Control so its width matches parent chart XAxis  -->
        <Grid Grid.Row="1"
              Grid.Column="1"
              Height="32"
              Background="{StaticResource ThemedSurfaceChartBackground}">

            <!--  The grid is used to set the padding on the Overview, so that the size of the Overview matches the size of the XAxis on the parent chart  -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="{Binding Source={x:Reference Name=Proxy}, Path=ActualWidthValue, Mode=OneWay, Converter={StaticResource DoubleToGridLengthConverter}}" />
            </Grid.ColumnDefinitions>

            <ext:ActualSizePropertyProxy x:Name="Proxy" Element="{Binding Source={x:Reference Name=PriceChart}, Path=YAxis}" />

            <!--  Define the Overview control, binding to XVisibleRange, which is shared between this and the SciStockChart control  -->
            <s:SciChartOverview Grid.Column="0"
                                DataSeries="{Binding SeriesViewModels[0].DataSeries, Mode=OneWay}"
                                ParentSurface="{Binding Source={x:Reference Name=PriceChart}, Mode=OneWay}"
                                SelectedRange="{Binding XVisibleRange, Mode=TwoWay}"/>
        </Grid>
    </Grid>

    <!--  Used for the example only. On user switching example, stop the timer  -->
    <!--  You shouldn't need this for your code  -->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding StopUpdatesCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

</UserControl>