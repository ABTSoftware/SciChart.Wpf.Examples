<UserControl x:Class="SciChart.Examples.Examples.ModifyAxisBehaviour.LogarithmicAxisView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             Loaded="OnLogarithmicAxisViewLoaded"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ext="http://schemas.abtsoftware.co.uk/scichart/exampleExternals"             
             d:DesignHeight="400"
             d:DesignWidth="600"
             mc:Ignorable="d">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Defines the Toolbar. -->
        <!-- It is included for example purposes. -->
        <!-- If you wish to know how to zoom and pan a chart then do a search for Zoom Pan in the Examples suite! -->
        <ext:SciChartInteractionToolbar Grid.Column="0">

            <ToggleButton x:Name="enableZoom"
                          ToolTipService.ToolTip="Toggle Rubber-Band Zoom"
                          Style="{StaticResource DefaultToggleButtonStyle}"
                          IsChecked="True"
                          s:ToggleButtonExtensions.GroupName="SyncMultiChartMouseZoomGroup">
                <ext:ToolbarIcon Kind="MagnifyPlusOutline" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </ToggleButton>

            <ToggleButton x:Name="enablePan"
                          ToolTipService.ToolTip="Toggle Zoom-Pan"
                          Style="{StaticResource DefaultToggleButtonStyle}"
                          s:ToggleButtonExtensions.GroupName="SyncMultiChartMouseZoomGroup">
                <ext:ToolbarIcon Kind="ArrowAll" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </ToggleButton>

            <Button ToolTipService.ToolTip="Zoom to Extents"
                    Style="{StaticResource DefaultButtonStyle}"
                    Command="{Binding Source={x:Reference Name=positiveScaleChart}, Path=ZoomExtentsCommand}">
                <ext:ToolbarIcon Kind="FitToPageOutline" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </Button>

            <ext:FlyoutSeparator/>

            <ext:FlyoutMenuButton>
                <ext:ToolbarIcon Kind="MathLog" Style="{StaticResource ToolbarButtonIconStyle}"/>
                <ext:FlyoutMenuButton.PopupContent>
                    <StackPanel Margin="5" Width="150" Orientation="Vertical">
                        <TextBlock Text="Use Logarithmic" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <CheckBox x:Name="isXLogChbx" Margin="0,5" IsChecked="True" Checked="OnAxisTypeChanged" Unchecked="OnAxisTypeChanged" Content="X-Axis"/>
                        <CheckBox x:Name="isYLogChbx" Margin="0,5" IsChecked="True" Checked="OnAxisTypeChanged" Unchecked="OnAxisTypeChanged" Content="Y-Axis"/>
                        <TextBlock Text="Logarithmic base" Margin="0,5" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <ComboBox x:Name="logBasesChbx" SelectedIndex="2">
                            <system:String>2</system:String>
                            <system:String>5</system:String>
                            <system:String>10</system:String>
                            <system:String>E</system:String>
                        </ComboBox>
                    </StackPanel>
                </ext:FlyoutMenuButton.PopupContent>
            </ext:FlyoutMenuButton>
        </ext:SciChartInteractionToolbar>

        <!--  Declare two SciChartSurfaces  -->
        <!--  Because in this example we are dynamically changing axis type from Linear to Logarithmic,  -->
        <!--  The axes for both charts are set in code behind.  -->
        <!--  In reality, if you wanted just a Logarithmic chart, please use type LogarithmicNumericAxis  -->
        <Grid Grid.Column="1">
            <Grid.Resources>
                <Style x:Key="LineSeriesStyle" x:Shared="False" TargetType="s:FastLineRenderableSeries">
                    <Setter Property="PointMarker">
                        <Setter.Value>
                            <s:EllipsePointMarker Width="5" Height="5" Fill="{Binding Stroke}"/>
                        </Setter.Value>
                    </Setter>
                </Style>

                <s:ModifierGroup x:Key="ModifierGroup" x:Shared="False" MouseEventGroup="SharedMouseEvents">
                    <s:RubberBandXyZoomModifier IsEnabled="{Binding Source={x:Reference Name=enableZoom}, Path=IsChecked}" IsXAxisOnly="True" ZoomExtentsY="True" />
                    <s:ZoomPanModifier IsEnabled="{Binding Source={x:Reference Name=enablePan}, Path=IsChecked}" ClipModeX="None" />
                    <s:MouseWheelZoomModifier />
                    <s:ZoomExtentsModifier />
                </s:ModifierGroup>
            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <s:SciChartSurface x:Name="positiveScaleChart"
                           Grid.Row="0"
                           ChartModifier="{StaticResource ModifierGroup}">

                <s:SciChartSurface.RenderableSeries>
                    <s:FastLineRenderableSeries Stroke="{StaticResource MainThemeStrokeColor}" Style="{StaticResource LineSeriesStyle}">
                        <s:FastLineRenderableSeries.SeriesAnimation>
                            <s:SweepAnimation AnimationDelay="0:0:0.2" Duration="0:0:1" ZeroLine="1000000"/>
                        </s:FastLineRenderableSeries.SeriesAnimation>
                    </s:FastLineRenderableSeries>
                    <s:FastLineRenderableSeries Stroke="{StaticResource SecondaryThemeStrokeColor}" Style="{StaticResource LineSeriesStyle}">
                        <s:FastLineRenderableSeries.SeriesAnimation>
                            <s:SweepAnimation AnimationDelay="0:0:0.2" Duration="0:0:1" ZeroLine="1000000"/>
                        </s:FastLineRenderableSeries.SeriesAnimation>
                    </s:FastLineRenderableSeries>
                    <s:FastLineRenderableSeries Stroke="{StaticResource ExtraThemeStrokeColor_2}" Style="{StaticResource LineSeriesStyle}">
                        <s:FastLineRenderableSeries.SeriesAnimation>
                            <s:SweepAnimation AnimationDelay="0:0:0.2" Duration="0:0:1" ZeroLine="1000000"/>
                        </s:FastLineRenderableSeries.SeriesAnimation>
                    </s:FastLineRenderableSeries>
                </s:SciChartSurface.RenderableSeries>

            </s:SciChartSurface>

            <s:SciChartSurface x:Name="negativeScaleChart" 
                           Grid.Row="1"
                           ChartModifier="{StaticResource ModifierGroup}">

                <s:SciChartSurface.RenderableSeries>
                    <s:FastLineRenderableSeries Stroke="{StaticResource MainThemeStrokeColor}" Style="{StaticResource LineSeriesStyle}">
                        <s:FastLineRenderableSeries.SeriesAnimation>
                            <s:SweepAnimation AnimationDelay="0:0:0.2" Duration="0:0:1" ZeroLine="-1000000"/>
                        </s:FastLineRenderableSeries.SeriesAnimation>
                    </s:FastLineRenderableSeries>
                    <s:FastLineRenderableSeries Stroke="{StaticResource SecondaryThemeStrokeColor}" Style="{StaticResource LineSeriesStyle}">
                        <s:FastLineRenderableSeries.SeriesAnimation>
                            <s:SweepAnimation AnimationDelay="0:0:0.2" Duration="0:0:1" ZeroLine="-1000000"/>
                        </s:FastLineRenderableSeries.SeriesAnimation>
                    </s:FastLineRenderableSeries>
                    <s:FastLineRenderableSeries Stroke="{StaticResource ExtraThemeStrokeColor_2}" Style="{StaticResource LineSeriesStyle}">
                        <s:FastLineRenderableSeries.SeriesAnimation>
                            <s:SweepAnimation AnimationDelay="0:0:0.2" Duration="0:0:1" ZeroLine="-1000000"/>
                        </s:FastLineRenderableSeries.SeriesAnimation>
                    </s:FastLineRenderableSeries>
                </s:SciChartSurface.RenderableSeries>

            </s:SciChartSurface>
        </Grid>
    </Grid>
</UserControl>
