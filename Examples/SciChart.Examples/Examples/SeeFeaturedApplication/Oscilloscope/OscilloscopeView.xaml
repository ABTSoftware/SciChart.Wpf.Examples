<UserControl x:Class="SciChart.Examples.Examples.SeeFeaturedApplication.Oscilloscope.OscilloscopeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ext="http://schemas.abtsoftware.co.uk/scichart/exampleExternals"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:SciChart.Examples.Examples.SeeFeaturedApplication.Oscilloscope"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             d:DesignHeight="400"
             d:DesignWidth="600"
             mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding StartCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding StopCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <s:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Margin" Value="3,2,2,2" />
        </Style>

        <Style x:Key="HintDataItemsStyle"
                   BasedOn="{StaticResource TextBlockStyle}"
                   TargetType="TextBlock">
            <Setter Property="FontSize" Value="13" />
        </Style>

        <Style x:Key="ChartDataItemsStyle"
                   BasedOn="{StaticResource TextBlockStyle}"
                   TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource MainThemeSolidBrush}" />
        </Style>

        <!--  Set the style for the series  -->
        <Style x:Key="LineSeriesStyle" TargetType="s:FastLineRenderableSeries">
            <Setter Property="StrokeThickness" Value="2" />
            <Setter Property="AntiAliasing" Value="True" />
            <Setter Property="Stroke" Value="{StaticResource MainThemeStrokeColor}" />
            <Setter Property="RolloverMarkerTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Ellipse Width="9"
                                     Height="9"
                                     Fill="{StaticResource MainThemeTransparentSolidBrush}"
                                     Stroke="{StaticResource MainThemeSolidBrush}"
                                     StrokeThickness="2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ChartDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                               Style="{StaticResource ChartDataItemsStyle}"
                               Text="{Binding SeriesName}" />

                <TextBlock Grid.Column="1"
                               Margin="0,2,2,2"
                               Style="{StaticResource ChartDataItemsStyle}"
                               Text=":" />

                <TextBlock Grid.Column="2"
                               Margin="3,2,20,2"
                               Style="{StaticResource ChartDataItemsStyle}"
                               Text="{Binding Value, StringFormat=\{0:0.0000\}}" />
            </Grid>
        </DataTemplate>

        <!--  Template for the CursorModifier tooltip to display AxisInfo collection (result of hit test)  -->
        <DataTemplate x:Key="CursorAxisLabelTemplate" DataType="s:AxisInfo">
            <Border Background="#33FFFFFF"
                        BorderBrush="#FFFFFFFF"
                        BorderThickness="1"
                        CornerRadius="5">
                <TextBlock Style="{StaticResource HintDataItemsStyle}" Text="{Binding AxisFormattedDataValue}" />
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="EmptyDataTemplate" DataType="s:AxisInfo" />

        <!--  Template for the CursorModifier tooltip to display AxisInfo collection (result of hit test)  -->
        <local:CustomAxisInfoTemplateSelector x:Key="TemplateSelector"
                                                  EmptyDataTemplate="{StaticResource EmptyDataTemplate}"
                                                  XAxisDataTemplate="{StaticResource CursorAxisLabelTemplate}"
                                                  YAxisDataTemplate="{StaticResource CursorAxisLabelTemplate}" />

        <!--  Template for the RolloverModifier tooltip to display AxisInfo collection (result of hit test)  -->
        <Style x:Key="TooltipStyle" TargetType="s:TooltipControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="s:TooltipControl">
                        <Border Background="#33FFFFFF"
                                    BorderBrush="#FFFFFFFF"
                                    BorderThickness="1"
                                    CornerRadius="5">
                            <ContentControl Content="{TemplateBinding DataContext}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="TooltipDataTemplate" DataType="s:SeriesInfo">
            <StackPanel>
                <TextBlock Style="{StaticResource HintDataItemsStyle}" Text="{Binding SeriesName}" />
                <TextBlock Style="{StaticResource HintDataItemsStyle}" Text="{Binding Value}" />
            </StackPanel>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="template">
            <Canvas s:ClipToBoundsHelper.ClipToBounds="True" />
        </ItemsPanelTemplate>

        <Style TargetType="s:NumericAxis">
            <Setter Property="GrowBy" Value="0.1, 0.1" />
            <Setter Property="BorderBrush" Value="{StaticResource MainThemeSolidBrush}" />
            <Setter Property="MajorTickLineStyle">
                <Setter.Value>
                    <Style TargetType="Line">
                        <Setter Property="Stroke" Value="{StaticResource MainThemeSolidBrush}" />
                        <Setter Property="StrokeThickness" Value="2" />
                        <Setter Property="StrokeEndLineCap" Value="Square" />
                        <Setter Property="X2" Value="6" />
                        <Setter Property="Y2" Value="6" />
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IsStepLineButtonStyle"
                   BasedOn="{StaticResource DefaultToggleButtonStyle}"
                   TargetType="ToggleButton">
            <Setter Property="ToolTipService.ToolTip" Value="Is Step Line" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border Background="{Binding Path=(ext:TextElementEx.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorType=ContentPresenter}}">
                            <Image Source="/SciChart.Examples;component/Resources/Images/step_line.png" Stretch="None" />
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CursorAxisLabelStyle" TargetType="s:AxisLabelControl">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>

        <ext:EnumValueToStringConverter x:Key="SelectedEnumValueConverter" />
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--  This toolbar adds zoom, pan, zoom extents and other functionality  -->
        <!--  to the chart and is included for example purposes.  -->
        <!--  If you wish to know how to zoom and pan a chart then do a search for Zoom Pan in the Examples suite!  -->
        <ext:SciChartInteractionToolbar Grid.Column="0">

            <ToggleButton IsChecked="{Binding Source={x:Reference RubberBandModifier}, Path=IsEnabled, Mode=TwoWay}"
                          Style="{StaticResource DefaultToggleButtonStyle}"
                          ToolTipService.ToolTip="Toggle Rubber-Band Zoom"
                          s:ToggleButtonExtensions.GroupName="ZoomPanSelectionGroup">
                <ext:ToolbarIcon Kind="MagnifyPlusOutline" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </ToggleButton>

            <ToggleButton IsChecked="{Binding Source={x:Reference ZoomPanModifier}, Path=IsEnabled, Mode=TwoWay}"
                          Style="{StaticResource DefaultToggleButtonStyle}"
                          ToolTipService.ToolTip="Toggle Zoom-Pan"
                          s:ToggleButtonExtensions.GroupName="ZoomPanSelectionGroup">
                <ext:ToolbarIcon Kind="ArrowAll" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </ToggleButton>

            <Button Command="{Binding Source={x:Reference oscilloscopeChart},Path=AnimateZoomExtentsCommand}"
                    Style="{StaticResource DefaultButtonStyle}"
                    ToolTipService.ToolTip="Zoom to Extents">
                <ext:ToolbarIcon Kind="FitToPageOutline" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </Button>

            <ext:FlyoutSeparator/>
            
            <ext:FlyoutMenuToggleButton IsChecked="{Binding IsRolloverSelected, Mode=TwoWay}"
                                        IsEnabled="{Binding CanExecuteRollover, Mode=OneWay}"
                                        ToolTipService.ToolTip="Rollover"
                                        ext:FlyoutMenuToggleButtonExtensions.GroupName="RollCursorTooltipSelectionGroup">
                <ext:ToolbarIcon Path="{StaticResource ToolbarRolloverIconPath}" Style="{StaticResource ToolbarButtonIconStyle}"/>
                <ext:FlyoutMenuToggleButton.PopupContent>
                    <StackPanel Margin="5" Width="150" Orientation="Vertical">
                        <TextBlock Text="Rollover mode" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <ComboBox ItemsSource="{Binding Source={ext:EnumValues {x:Type s:SourceMode}}}" 
                                  SelectedItem="{Binding Source={x:Reference rolloverModifier}, Path=SourceMode, Mode=TwoWay, Converter={StaticResource SelectedEnumValueConverter}}"/>

                        <TextBlock Text="Show tooltip mode" Margin="0,10,0,5" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <ComboBox ItemsSource="{Binding Source={ext:EnumValues {x:Type s:ShowTooltipOptions}}}" 
                                  SelectedItem="{Binding Source={x:Reference rolloverModifier}, Path=ShowTooltipOn, Mode=TwoWay, Converter={StaticResource SelectedEnumValueConverter}}"/>

                        <CheckBox Margin="0,10,0,5" Content="Show Axis Label" IsChecked="{Binding Source={x:Reference Name=rolloverModifier}, Path=ShowAxisLabels, Mode=TwoWay}"/>
                    </StackPanel>
                </ext:FlyoutMenuToggleButton.PopupContent>
            </ext:FlyoutMenuToggleButton>

            <ext:FlyoutMenuToggleButton IsChecked="{Binding IsCursorSelected, Mode=TwoWay}"
                                        ext:FlyoutMenuToggleButtonExtensions.GroupName="RollCursorTooltipSelectionGroup">
                <ext:ToolbarIcon Kind="CrosshairsGps" Style="{StaticResource ToolbarButtonIconStyle}"/>
                <ext:FlyoutMenuToggleButton.PopupContent>
                    <StackPanel Margin="5" Width="150" Orientation="Vertical">
                        <StackPanel.Resources>
                            <ext:SnappingModeToVisibilityConverter x:Key="SnappingModeToVisibilityConverter"/>
                        </StackPanel.Resources>

                        <TextBlock Text="Cursor mode" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <ComboBox ItemsSource="{Binding Source={ext:EnumValues {x:Type s:SourceMode}}}" SelectedItem="{Binding Source={x:Reference Name=cursorModifier}, Path=SourceMode, Mode=TwoWay, Converter={StaticResource SelectedEnumValueConverter}}"/>

                        <TextBlock Text="Show tooltip mode" Margin="0,10,0,5" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <ComboBox ItemsSource="{Binding Source={ext:EnumValues {x:Type s:ShowTooltipOptions}}}" SelectedItem="{Binding Source={x:Reference Name=cursorModifier}, Path=ShowTooltipOn, Mode=TwoWay, Converter={StaticResource SelectedEnumValueConverter}}"/>

                        <TextBlock Text="Snapping mode" Margin="0,10,0,5" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <ComboBox ItemsSource="{Binding Source={ext:EnumValues {x:Type s:CursorSnappingMode}}}"
                                  SelectedItem="{Binding Source={x:Reference Name=cursorModifier}, Path=SnappingMode, Mode=TwoWay, Converter={StaticResource SelectedEnumValueConverter}}" />

                        <CheckBox Margin="0,10,0,5" Content="Show Axis Label" IsChecked="{Binding Source={x:Reference Name=cursorModifier}, Path=ShowAxisLabels, Mode=TwoWay}"/>
                        <CheckBox Margin="0,5" Content="Show Tooltip" IsChecked="{Binding Source={x:Reference Name=cursorModifier}, Path=ShowTooltip, Mode=TwoWay}"/>
                    </StackPanel>
                </ext:FlyoutMenuToggleButton.PopupContent>
            </ext:FlyoutMenuToggleButton>

            <ext:FlyoutSeparator/>

            <ext:FlyoutMenuButton x:Name="OscilloscopeDataSourceExample" ToolTipService.ToolTip="Data Source">
                <ext:ToolbarIcon Kind="DatabaseArrowRight" Height="16" Width="16" Style="{StaticResource ToolbarButtonIconStyle}"/>
                <ext:FlyoutMenuButton.PopupContent>
                    <StackPanel Margin="5" Width="150" Orientation="Vertical">
                        <TextBlock Text="Data Source" Style="{StaticResource FlyoutMenuHeaderStyle}"/>
                        <ComboBox SelectedItem="{Binding SelectedDataSource, Mode=TwoWay}">
                            <ComboBox.Items>
                                <system:String>Fourier Series</system:String>
                                <system:String>Lissajous</system:String>
                            </ComboBox.Items>
                        </ComboBox>
                    </StackPanel>
                </ext:FlyoutMenuButton.PopupContent>
            </ext:FlyoutMenuButton>

            <ToggleButton Command="{Binding SetDigitalLineCommand}"
                          IsChecked="{Binding IsDigitalLine, Mode=OneWay}"
                          Style="{StaticResource DefaultToggleButtonStyle}"
                          ToolTipService.ToolTip="Toggle Digital Line">
                <ext:ToolbarIcon Kind="SquareWave" Height="14" Width="14" Style="{StaticResource ToolbarButtonIconStyle}"/>
            </ToggleButton>

        </ext:SciChartInteractionToolbar>

        <s:SciChartSurface x:Name="oscilloscopeChart"
                           Grid.Column="1"
                           CenterXAxesPanelTemplate="{StaticResource template}"
                           CenterYAxesPanelTemplate="{StaticResource template}"
                           RenderPriority="Low">
            <i:Interaction.Behaviors>
                <local:ShiftedAxesBehavior XAxisPosition="0"
                                           XMode="Absolute"
                                           YAxisPosition="0.5"
                                           YMode="Relative" />
            </i:Interaction.Behaviors>
            <!--  Declare RenderableSeries, which map 1:1 to DataSet series and in order  -->
            <s:SciChartSurface.RenderableSeries>
                <s:FastLineRenderableSeries DataSeries="{Binding ChartData}"
                                            IsDigitalLine="{Binding IsDigitalLine, Mode=TwoWay}"
                                            ResamplingMode="{Binding SeriesResamplingMode}"
                                            Style="{StaticResource LineSeriesStyle}"
                                            s:CursorModifier.SnapToSeries="True"
                                            s:RolloverModifier.TooltipContainerStyle="{StaticResource TooltipStyle}"
                                            s:RolloverModifier.TooltipTemplate="{StaticResource TooltipDataTemplate}" />
            </s:SciChartSurface.RenderableSeries>

            <!--  Create default X and Y axes. Optional bands give a cool look and feel for minimal performance impact  -->
            <s:SciChartSurface.XAxes>
                <s:NumericAxis AnimatedVisibleRange="{Binding XVisibleRange,
                                                              Mode=TwoWay}"
                               BorderThickness="0,2,0,0"
                               DrawMajorBands="True"
                               IsCenterAxis="True"
                               TextFormatting="0.00;-0.00; "
                               VisibleRangeLimit="{Binding XLimit}" />
                <s:NumericAxis AxisTitle="Time (ms)"
                               DrawLabels="False"
                               DrawMajorTicks="False"
                               DrawMinorTicks="False"
                               Id="xid"
                               s:RolloverModifier.AxisLabelContainerStyle="{StaticResource CursorAxisLabelStyle}"
                               s:CursorModifier.AxisLabelContainerStyle="{StaticResource CursorAxisLabelStyle}" />
            </s:SciChartSurface.XAxes>

            <s:SciChartSurface.YAxes>
                <s:NumericAxis AnimatedVisibleRange="{Binding YVisibleRange, Mode=TwoWay}"
                               BorderThickness="2,0,0,0"
                               GrowBy="0.1, 0.1"
                               IsCenterAxis="True"
                               TextFormatting="0.00;-0.00; "
                               VisibleRangeLimit="{Binding YLimit}" />

                <s:NumericAxis AxisTitle="Voltage (mV)"
                               DrawLabels="False"
                               DrawMajorTicks="False"
                               DrawMinorTicks="False"
                               Id="yid"
                               s:CursorModifier.AxisLabelContainerStyle="{StaticResource CursorAxisLabelStyle}" />
            </s:SciChartSurface.YAxes>

            <!--  Create ChartModifiers, which are enabled or disabled from the ViewModel -->
            <s:SciChartSurface.ChartModifier>
                <s:ModifierGroup>
                    <s:RolloverModifier x:Name="rolloverModifier" IsEnabled="{Binding IsRolloverSelected, Mode=OneWay}" ShowTooltipOn="Always" />
                    <s:CursorModifier x:Name="cursorModifier" IsEnabled="{Binding IsCursorSelected, Mode=OneWay}" ShowTooltip="True"/>
                    <s:MouseWheelZoomModifier />
                    <s:ZoomExtentsModifier />
                    <s:ZoomPanModifier x:Name="ZoomPanModifier" IsEnabled="False" />
                    <s:RubberBandXyZoomModifier x:Name="RubberBandModifier" />
                </s:ModifierGroup>
            </s:SciChartSurface.ChartModifier>

        </s:SciChartSurface>

        <!--  Define the overlay panel to show start and to dates, chart values  -->
        <Grid Grid.Column="1"
              Margin="35,35,15,0"
              DataContext="{Binding Source={x:Reference Name=oscilloscopeChart}, Path=ChartModifier[RolloverModifier]}"
              Visibility="{Binding Source={x:Reference Name=oscilloscopeChart}, Path=DataContext.IsRolloverSelected,
                        Converter={StaticResource BooleanToVisibilityConverter}}">
            <ItemsControl MinHeight="24"
                          VerticalAlignment="Top"
                          ItemTemplate="{StaticResource ChartDataTemplate}"
                          ItemsSource="{Binding SeriesData.SeriesInfo}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Grid>
    </Grid>
</UserControl>